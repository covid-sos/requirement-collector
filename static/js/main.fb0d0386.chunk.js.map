{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","row","display","flexFlow","margin","padding","maxWidth","flex","paper","spacing","textAlign","color","palette","text","secondary","FormLinks","city","link","App","classes","className","Paper","map","data","index","href","rel","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,IAAK,CACHC,QAAS,OACTC,SAAU,aACVC,OAAQ,WACRC,QAAS,OACTC,SAAU,QACV,QAAS,CACPC,KAAM,GAER,OAAQ,CACNA,KAAM,IAGVC,MAAO,CACLH,QAASL,EAAMS,QAAQ,GACvBC,UAAW,SACXC,MAAOX,EAAMY,QAAQC,KAAKC,eAIxBC,EAAY,CAChB,CACEC,KAAM,QACNC,KAAM,uCAER,CACED,KAAM,2BACNC,KAAM,uCAER,CACED,KAAM,SACNC,KAAM,wCAkDKC,MA9Cf,WACE,IAAMC,EAAUrB,IAChB,OACE,sBAAKsB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,2CACA,sIAEiC,uBAC/B,uBAHF,4HAKsD,uBACpD,uBANF,iGAQyB,uBACvB,uBATF,2FAWmB,uBACjB,uBACA,8BACE,qCADF,qJAOJ,iCACE,cAACC,EAAA,EAAD,CAAOD,UAAWD,EAAQlB,IAA1B,SACE,0CAEDc,EAAUO,KAAI,SAACC,EAAMC,GACpB,OACE,cAACH,EAAA,EAAD,CAAOD,UAAWD,EAAQlB,IAA1B,SACE,8BACE,mBAAGwB,KAAMF,EAAKN,KAAMS,IAAI,aAAaC,OAAO,SAA5C,SACGJ,EAAKP,UAHwBQ,aC7DjCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fb0d0386.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: \"flex\",\n    flexFlow: \"row nowrap\",\n    margin: \"8px auto\",\n    padding: \"16px\",\n    maxWidth: \"650px\",\n    \"&>div\": {\n      flex: 1,\n    },\n    \"&>h4\": {\n      flex: 1,\n    },\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst FormLinks = [\n  {\n    city: \"DELHI\",\n    link: \"https://forms.gle/bYRA7CW552H7iUXVA\",\n  },\n  {\n    city: \"Mumbai/Thane/Navi Mumbai\",\n    link: \"https://forms.gle/6ghtCFk1nVpWDKt48\",\n  },\n  {\n    city: \"Kanpur\",\n    link: \"https://forms.gle/WYK5spnyAQ5rPjAw9\",\n  },\n];\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Covid SOS</h2>\n        <p>\n          In need any sort of covid resources viz Remdesivir, Medicines, Oxygen\n          cylinders, Hospital Beds, etc? <br />\n          <br />\n          Just fill in your & patient details and we will forward your details\n          to relevant individuals or people who can help you. <br />\n          <br />\n          This is purely out of empathy for humankind, so don't use this to pull\n          pranks or fool people. <br />\n          <br />\n          Submit only if you are comfortable sharing your details or are in need\n          of the resouces. <br />\n          <br />\n          <i>\n            <b>Note</b>: We only guarantee to get you in touch with parties\n            possessing the resources. We are in no way part of the transactions\n            and negotiations\n          </i>\n        </p>\n      </header>\n      <body>\n        <Paper className={classes.row}>\n          <h4>Cities</h4>\n        </Paper>\n        {FormLinks.map((data, index) => {\n          return (\n            <Paper className={classes.row} key={index}>\n              <div>\n                <a href={data.link} rel=\"noreferrer\" target=\"_blank\">\n                  {data.city}\n                </a>\n              </div>\n            </Paper>\n          );\n        })}\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}